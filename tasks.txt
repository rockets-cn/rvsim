Tasks:

1. Verilog RV32I CPU that execute instructions
	1.1 Verilog CPU
		1.1.1 *write verilog
			1.1.1.1 semi-realistic timing models to plan for instruction execution timing
			1.1.1.2 test ALU
	1.2 basic C simulator: done
2. Assembler
	2.1 write assembler
3. Verilog CPU that can run Linux
	3.1 Verilog CPU running noMMU Linux with verilator
	3.2 Running noMMU Linux on C simulator: done
	3.3 add MMU and run xv6 on simulator
		* build xv6 (32-bit)
		* test
	3.4 add MMU and supervisor mode to verilog, run MMU Linux
	3.5 run MMU Linux on C simulator
4. Implement CPU on FPGA
	4.1 Modify verilog and synthesize on FPGA, run simple program
	4.2 Run Linux
5. PCB: ESP32 + ...
6. Implement CPU as ASIC
	5.0 Understand tools
	5.1 Understand process capabilities and limitations
